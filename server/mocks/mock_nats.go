// Code generated by MockGen. DO NOT EDIT.
// Source: ./ws/nats.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockINATSPublisher is a mock of INATSPublisher interface.
type MockINATSPublisher struct {
	ctrl     *gomock.Controller
	recorder *MockINATSPublisherMockRecorder
}

// MockINATSPublisherMockRecorder is the mock recorder for MockINATSPublisher.
type MockINATSPublisherMockRecorder struct {
	mock *MockINATSPublisher
}

// NewMockINATSPublisher creates a new mock instance.
func NewMockINATSPublisher(ctrl *gomock.Controller) *MockINATSPublisher {
	mock := &MockINATSPublisher{ctrl: ctrl}
	mock.recorder = &MockINATSPublisherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockINATSPublisher) EXPECT() *MockINATSPublisherMockRecorder {
	return m.recorder
}

// InitMsgListener mocks base method.
func (m *MockINATSPublisher) InitMsgListener() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "InitMsgListener")
}

// InitMsgListener indicates an expected call of InitMsgListener.
func (mr *MockINATSPublisherMockRecorder) InitMsgListener() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitMsgListener", reflect.TypeOf((*MockINATSPublisher)(nil).InitMsgListener))
}

// SendMsgNATS mocks base method.
func (m *MockINATSPublisher) SendMsgNATS(content any) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SendMsgNATS", content)
}

// SendMsgNATS indicates an expected call of SendMsgNATS.
func (mr *MockINATSPublisherMockRecorder) SendMsgNATS(content interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMsgNATS", reflect.TypeOf((*MockINATSPublisher)(nil).SendMsgNATS), content)
}
