// Code generated by MockGen. DO NOT EDIT.
// Source: lib/jwt.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIJWTTokenHelper is a mock of IJWTTokenHelper interface.
type MockIJWTTokenHelper struct {
	ctrl     *gomock.Controller
	recorder *MockIJWTTokenHelperMockRecorder
}

// MockIJWTTokenHelperMockRecorder is the mock recorder for MockIJWTTokenHelper.
type MockIJWTTokenHelperMockRecorder struct {
	mock *MockIJWTTokenHelper
}

// NewMockIJWTTokenHelper creates a new mock instance.
func NewMockIJWTTokenHelper(ctrl *gomock.Controller) *MockIJWTTokenHelper {
	mock := &MockIJWTTokenHelper{ctrl: ctrl}
	mock.recorder = &MockIJWTTokenHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIJWTTokenHelper) EXPECT() *MockIJWTTokenHelperMockRecorder {
	return m.recorder
}

// CreateNewToken mocks base method.
func (m *MockIJWTTokenHelper) CreateNewToken(data string, expireAfter int64) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNewToken", data, expireAfter)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateNewToken indicates an expected call of CreateNewToken.
func (mr *MockIJWTTokenHelperMockRecorder) CreateNewToken(data, expireAfter interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNewToken", reflect.TypeOf((*MockIJWTTokenHelper)(nil).CreateNewToken), data, expireAfter)
}
