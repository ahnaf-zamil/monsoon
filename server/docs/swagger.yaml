basePath: /api
definitions:
  api.APIResponse:
    properties:
      data: {}
      error:
        type: boolean
      message:
        type: string
    type: object
  api.MessageCreateSchema:
    properties:
      content:
        example: hunter2
        type: string
    required:
    - content
    type: object
  api.UserCreateSchema:
    properties:
      display_name:
        example: John Doe
        type: string
      email:
        example: john@doe.com
        type: string
      password:
        example: ilovejanedoe
        minLength: 8
        type: string
      username:
        example: johndoe1
        maxLength: 15
        minLength: 3
        type: string
    required:
    - display_name
    - email
    - password
    - username
    type: object
  api.UserLoginSchema:
    properties:
      email:
        example: john@doe.com
        type: string
      password:
        example: ilovejanedoe
        type: string
    required:
    - email
    - password
    type: object
info:
  contact:
    email: ahnaf@ahnafzamil.com
    name: Author
    url: https://ahnafzamil.com/contact
  description: REST API and WebSocket server for Monsoon
  title: Monsoon API
  version: 0.0.1
paths:
  /message/user/{recipientId}:
    post:
      consumes:
      - application/json
      description: Send a direct message to a user
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      - description: Message data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.MessageCreateSchema'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.APIResponse'
      security:
      - BearerAuth: []
      summary: Directly Message a User
      tags:
      - messages
  /user/create:
    post:
      consumes:
      - application/json
      description: User creation/registration route
      parameters:
      - description: User info
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.UserCreateSchema'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.APIResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/api.APIResponse'
      summary: Create a new user
      tags:
      - users
  /user/login:
    post:
      consumes:
      - application/json
      description: User authentication route
      parameters:
      - description: User credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.UserLoginSchema'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.APIResponse'
      summary: Login User
      tags:
      - users
  /user/me:
    post:
      description: Currently authenticated user route
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.APIResponse'
      security:
      - BearerAuth: []
      summary: Get Current User
      tags:
      - users
  /user/token:
    post:
      description: Retrieve authentication access token for authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.APIResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.APIResponse'
      summary: Get Access Token
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
